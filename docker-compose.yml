version: "3.9"

services:
  proxy:
    image: budibase/proxy
    restart: always
    environment:
      - PROXY_RATE_LIMIT_WEBHOOKS_PER_SECOND=10
      - PROXY_RATE_LIMIT_API_PER_SECOND=20
      - APPS_UPSTREAM_URL=http://app:5000
      - WORKER_UPSTREAM_URL=http://worker:4000
      - COUCHDB_UPSTREAM_URL=http://db:5984
      - RESOLVER=127.0.0.11
    expose:
      - 10000
    networks:
      - internal
      - nginx
    depends_on:
      app:
        condition: service_started
      worker:
        condition: service_started
      db:
        condition: service_started
  app:
    image: budibase.docker.scarf.sh/budibase/apps
    restart: always
    environment:
      BB_ADMIN_USER_EMAIL: ${BB_ADMIN_USER_EMAIL}
      BB_ADMIN_USER_PASSWORD: ${BB_ADMIN_USER_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      INTERNAL_API_KEY: ${INTERNAL_API_KEY}
      API_ENCRYPTION_KEY: ${API_ENCRYPTION_KEY}
      MINIO_URL: ${MINIO_URL:-}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-}
      COUCH_DB_URL: http://${COUCH_DB_USER}:${COUCH_DB_PASSWORD}@db:5984
      REDIS_URL: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ENABLE_ANALYTICS: "true"
      LOG_LEVEL: info
      PLUGINS_DIR: ${PLUGINS_DIR}
      WORKER_URL: http://worker:4000
      BUDIBASE_ENVIRONMENT: PRODUCTION
      OFFLINE_MODE: ${OFFLINE_MODE:-}
      PORT: 5000
      SELF_HOSTED: 1
    expose:
      - 5000
    networks:
      - internal
    depends_on:
      worker:
        condition: service_started
      redis:
        condition: service_healthy
    links:
      - db
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_APP_CPU:-2}
          memory: ${LIMIT_APP_RAM:-1G}
        reservations:
          cpus: "1"
          memory: 128M
  worker:
    image: budibase.docker.scarf.sh/budibase/worker
    restart: always
    environment:
      SELF_HOSTED: 1
      PORT: 4000
      OFFLINE_MODE: ${OFFLINE_MODE:-}
      CLUSTER_PORT: 10000
      API_ENCRYPTION_KEY: ${API_ENCRYPTION_KEY}
      INTERNAL_API_KEY: ${INTERNAL_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
      MINIO_URL: ${MINIO_URL:-}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-}
      APPS_URL: http://app:5000
      COUCH_DB_URL: http://${COUCH_DB_USER}:${COUCH_DB_PASSWORD}@db:5984
      COUCH_DB_USERNAME: ${COUCH_DB_USER}
      COUCH_DB_PASSWORD: ${COUCH_DB_PASSWORD}
      REDIS_URL: redis:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    expose:
      - 4000
    networks:
      - internal
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_WORKER_CPU:-2}
          memory: ${LIMIT_WORKER_RAM:-512M}
        reservations:
          cpus: "1"
          memory: 128M
  db:
    image: budibase/couchdb
    restart: always
    environment:
      COUCHDB_USER: ${COUCH_DB_USER}
      COUCHDB_PASSWORD: ${COUCH_DB_PASSWORD}
      TARGETBUILD: docker-compose
    volumes:
      - ${BASE_VOLUME}/couchdb:/opt/couchdb/data
    expose:
      - 5984
    networks:
      - internal
    # healthcheck:
    #   test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
    #   retries: 3
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_DB_CPU:-1}
          memory: ${LIMIT_DB_RAM:-512M}
        reservations:
          cpus: "1"
          memory: 64M
  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${BASE_VOLUME}/redis:/data
    expose:
      - 6379
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      retries: 3
    deploy:
      resources:
        limits:
          cpus: ${LIMIT_REDIS_CPU:-1}
          memory: ${LIMIT_REDIS_RAM:-512M}
        reservations:
          cpus: "0.1"
          memory: 16M

networks:
  internal:
  nginx:
    external: true
  monitoring:
    external: true
